package com.arn.scrobble.themes.colors

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

object Themee8d1a8 : ThemeVariants {
    override val name = this::class.simpleName!!

    override val light
        get() = lightColorScheme(
            primary = Color(0xFF6B5E4A),
            onPrimary = Color(0xFFFFFFFF),
            primaryContainer = Color(0xFFE8D1A8),
            onPrimaryContainer = Color(0xFF241A00),
            secondary = Color(0xFF5E4F3A),
            onSecondary = Color(0xFFFFFFFF),
            secondaryContainer = Color(0xFFE8D1A8),
            onSecondaryContainer = Color(0xFF241A00),
            tertiary = Color(0xFF4A5E3A),
            onTertiary = Color(0xFFFFFFFF),
            tertiaryContainer = Color(0xFFD1E8A8),
            onTertiaryContainer = Color(0xFF1A2400),
            error = Color(0xFFBA1A1A),
            onError = Color(0xFFFFFFFF),
            errorContainer = Color(0xFFFFDAD6),
            onErrorContainer = Color(0xFF410002),
            background = Color(0xFFFFF8F2),
            onBackground = Color(0xFF1F1B13),
            surface = Color(0xFFFFF8F2),
            onSurface = Color(0xFF1F1B13),
            surfaceVariant = Color(0xFFEDE1CF),
            onSurfaceVariant = Color(0xFF4D4639),
            outline = Color(0xFF7F7667),
            outlineVariant = Color(0xFFD1C5B4),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFF353027),
            inverseOnSurface = Color(0xFFFAEFE2),
            inversePrimary = Color(0xFFEAC16C),
            surfaceDim = Color(0xFFE2D9CC),
            surfaceBright = Color(0xFFFFF8F2),
            surfaceContainerLowest = Color(0xFFFFFFFF),
            surfaceContainerLow = Color(0xFFFDF2E5),
            surfaceContainer = Color(0xFFF7ECDF),
            surfaceContainerHigh = Color(0xFFF1E7D9),
            surfaceContainerHighest = Color(0xFFEBE1D4)
        )

    override val dark
        get() = darkColorScheme(
            primary = Color(0xFFEAC16C),
            onPrimary = Color(0xFF402D00),
            primaryContainer = Color(0xFF5C4300),
            onPrimaryContainer = Color(0xFFFFDEA1),
            secondary = Color(0xFFD8C4A0),
            onSecondary = Color(0xFF3B2F15),
            secondaryContainer = Color(0xFF53452A),
            onSecondaryContainer = Color(0xFFF5E0BB),
            tertiary = Color(0xFFB1CFA9),
            onTertiary = Color(0xFF1E361B),
            tertiaryContainer = Color(0xFF344D30),
            onTertiaryContainer = Color(0xFFCDEBC3),
            error = Color(0xFFFFB4AB),
            onError = Color(0xFF690005),
            errorContainer = Color(0xFF93000A),
            onErrorContainer = Color(0xFFFFDAD6),
            background = Color(0xFF17130B),
            onBackground = Color(0xFFEBE1D4),
            surface = Color(0xFF17130B),
            onSurface = Color(0xFFEBE1D4),
            surfaceVariant = Color(0xFF4D4639),
            onSurfaceVariant = Color(0xFFD1C5B4),
            outline = Color(0xFF998F80),
            outlineVariant = Color(0xFF4D4639),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFFEBE1D4),
            inverseOnSurface = Color(0xFF353027),
            inversePrimary = Color(0xFF78590C),
            surfaceDim = Color(0xFF17130B),
            surfaceBright = Color(0xFF3E382F),
            surfaceContainerLowest = Color(0xFF120E07),
            surfaceContainerLow = Color(0xFF1F1B13),
            surfaceContainer = Color(0xFF241F17),
            surfaceContainerHigh = Color(0xFF2E2921),
            surfaceContainerHighest = Color(0xFF39342B)
        )

    override val lightHighContrast
        get() = lightColorScheme(
            primary = Color(0xFF2E2000),
            onPrimary = Color(0xFFFFFFFF),
            primaryContainer = Color(0xFF573F00),
            onPrimaryContainer = Color(0xFFFFFFFF),
            secondary = Color(0xFF2C2108),
            onSecondary = Color(0xFFFFFFFF),
            secondaryContainer = Color(0xFF4F4126),
            onSecondaryContainer = Color(0xFFFFFFFF),
            tertiary = Color(0xFF0F270E),
            onTertiary = Color(0xFFFFFFFF),
            tertiaryContainer = Color(0xFF30492C),
            onTertiaryContainer = Color(0xFFFFFFFF),
            error = Color(0xFF4E0002),
            onError = Color(0xFFFFFFFF),
            errorContainer = Color(0xFF8C0009),
            onErrorContainer = Color(0xFFFFFFFF),
            background = Color(0xFFFFF8F2),
            onBackground = Color(0xFF1F1B13),
            surface = Color(0xFFFFF8F2),
            onSurface = Color(0xFF000000),
            surfaceVariant = Color(0xFFEDE1CF),
            onSurfaceVariant = Color(0xFF292318),
            outline = Color(0xFF494235),
            outlineVariant = Color(0xFF494235),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFF353027),
            inverseOnSurface = Color(0xFFFFFFFF),
            inversePrimary = Color(0xFFFFE9C5),
            surfaceDim = Color(0xFFE2D9CC),
            surfaceBright = Color(0xFFFFF8F2),
            surfaceContainerLowest = Color(0xFFFFFFFF),
            surfaceContainerLow = Color(0xFFFDF2E5),
            surfaceContainer = Color(0xFFF7ECDF),
            surfaceContainerHigh = Color(0xFFF1E7D9),
            surfaceContainerHighest = Color(0xFFEBE1D4)
        )

    override val darkHighContrast
        get() = darkColorScheme(
            primary = Color(0xFFFFFAF7),
            onPrimary = Color(0xFF000000),
            primaryContainer = Color(0xFFEFC570),
            onPrimaryContainer = Color(0xFF000000),
            secondary = Color(0xFFFFFAF7),
            onSecondary = Color(0xFF000000),
            secondaryContainer = Color(0xFFDDC8A4),
            onSecondaryContainer = Color(0xFF000000),
            tertiary = Color(0xFFF1FFE9),
            onTertiary = Color(0xFF000000),
            tertiaryContainer = Color(0xFFB5D3AD),
            onTertiaryContainer = Color(0xFF000000),
            error = Color(0xFFFFF9F9),
            onError = Color(0xFF000000),
            errorContainer = Color(0xFFFFBAB1),
            onErrorContainer = Color(0xFF000000),
            background = Color(0xFF17130B),
            onBackground = Color(0xFFEBE1D4),
            surface = Color(0xFF17130B),
            onSurface = Color(0xFFFFFFFF),
            surfaceVariant = Color(0xFF4D4639),
            onSurfaceVariant = Color(0xFFFFFAF7),
            outline = Color(0xFFD5C9B8),
            outlineVariant = Color(0xFFD5C9B8),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFFEBE1D4),
            inverseOnSurface = Color(0xFF000000),
            inversePrimary = Color(0xFF382700),
            surfaceDim = Color(0xFF17130B),
            surfaceBright = Color(0xFF3E382F),
            surfaceContainerLowest = Color(0xFF120E07),
            surfaceContainerLow = Color(0xFF1F1B13),
            surfaceContainer = Color(0xFF241F17),
            surfaceContainerHigh = Color(0xFF2E2921),
            surfaceContainerHighest = Color(0xFF39342B)
        )

    override val lightMediumContrast
        get() = lightColorScheme(
            primary = Color(0xFF573F00),
            onPrimary = Color(0xFFFFFFFF),
            primaryContainer = Color(0xFF916F23),
            onPrimaryContainer = Color(0xFFFFFFFF),
            secondary = Color(0xFF4F4126),
            onSecondary = Color(0xFFFFFFFF),
            secondaryContainer = Color(0xFF837254),
            onSecondaryContainer = Color(0xFFFFFFFF),
            tertiary = Color(0xFF30492C),
            onTertiary = Color(0xFFFFFFFF),
            tertiaryContainer = Color(0xFF607C5B),
            onTertiaryContainer = Color(0xFFFFFFFF),
            error = Color(0xFF8C0009),
            onError = Color(0xFFFFFFFF),
            errorContainer = Color(0xFFDA342E),
            onErrorContainer = Color(0xFFFFFFFF),
            background = Color(0xFFFFF8F2),
            onBackground = Color(0xFF1F1B13),
            surface = Color(0xFFFFF8F2),
            onSurface = Color(0xFF1F1B13),
            surfaceVariant = Color(0xFFEDE1CF),
            onSurfaceVariant = Color(0xFF494235),
            outline = Color(0xFF665E50),
            outlineVariant = Color(0xFF83796B),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFF353027),
            inverseOnSurface = Color(0xFFFAEFE2),
            inversePrimary = Color(0xFFEAC16C),
            surfaceDim = Color(0xFFE2D9CC),
            surfaceBright = Color(0xFFFFF8F2),
            surfaceContainerLowest = Color(0xFFFFFFFF),
            surfaceContainerLow = Color(0xFFFDF2E5),
            surfaceContainer = Color(0xFFF7ECDF),
            surfaceContainerHigh = Color(0xFFF1E7D9),
            surfaceContainerHighest = Color(0xFFEBE1D4)
        )

    override val darkMediumContrast
        get() = darkColorScheme(
            primary = Color(0xFFEFC570),
            onPrimary = Color(0xFF1F1400),
            primaryContainer = Color(0xFFB08B3D),
            onPrimaryContainer = Color(0xFF000000),
            secondary = Color(0xFFDDC8A4),
            onSecondary = Color(0xFF1F1501),
            secondaryContainer = Color(0xFFA08E6E),
            onSecondaryContainer = Color(0xFF000000),
            tertiary = Color(0xFFB5D3AD),
            onTertiary = Color(0xFF041B04),
            tertiaryContainer = Color(0xFF7C9875),
            onTertiaryContainer = Color(0xFF000000),
            error = Color(0xFFFFBAB1),
            onError = Color(0xFF370001),
            errorContainer = Color(0xFFFF5449),
            onErrorContainer = Color(0xFF000000),
            background = Color(0xFF17130B),
            onBackground = Color(0xFFEBE1D4),
            surface = Color(0xFF17130B),
            onSurface = Color(0xFFFFFAF7),
            surfaceVariant = Color(0xFF4D4639),
            onSurfaceVariant = Color(0xFFD5C9B8),
            outline = Color(0xFFACA191),
            outlineVariant = Color(0xFF8B8273),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFFEBE1D4),
            inverseOnSurface = Color(0xFF2E2921),
            inversePrimary = Color(0xFF5D4400),
            surfaceDim = Color(0xFF17130B),
            surfaceBright = Color(0xFF3E382F),
            surfaceContainerLowest = Color(0xFF120E07),
            surfaceContainerLow = Color(0xFF1F1B13),
            surfaceContainer = Color(0xFF241F17),
            surfaceContainerHigh = Color(0xFF2E2921),
            surfaceContainerHighest = Color(0xFF39342B)
        )
}