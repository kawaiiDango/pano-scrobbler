package com.arn.scrobble.themes.colors

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

object Themedd4337 : ThemeVariants {
    override val name = this::class.simpleName!!

    override val light
        get() = lightColorScheme(
            primary = Color(0xFF904A42),
            onPrimary = Color(0xFFFFFFFF),
            primaryContainer = Color(0xFFFFDAD5),
            onPrimaryContainer = Color(0xFF3B0906),
            secondary = Color(0xFF775652),
            onSecondary = Color(0xFFFFFFFF),
            secondaryContainer = Color(0xFFFFDAD5),
            onSecondaryContainer = Color(0xFF2C1512),
            tertiary = Color(0xFF715C2E),
            onTertiary = Color(0xFFFFFFFF),
            tertiaryContainer = Color(0xFFFCDFA6),
            onTertiaryContainer = Color(0xFF261A00),
            error = Color(0xFFBA1A1A),
            onError = Color(0xFFFFFFFF),
            errorContainer = Color(0xFFFFDAD6),
            onErrorContainer = Color(0xFF410002),
            background = Color(0xFFFFF8F7),
            onBackground = Color(0xFF231918),
            surface = Color(0xFFFFF8F7),
            onSurface = Color(0xFF231918),
            surfaceVariant = Color(0xFFF5DDDA),
            onSurfaceVariant = Color(0xFF534341),
            outline = Color(0xFF857370),
            outlineVariant = Color(0xFFD8C2BE),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFF392E2C),
            inverseOnSurface = Color(0xFFFFEDEA),
            inversePrimary = Color(0xFFFFB4AA),
            surfaceDim = Color(0xFFE8D6D4),
            surfaceBright = Color(0xFFFFF8F7),
            surfaceContainerLowest = Color(0xFFFFFFFF),
            surfaceContainerLow = Color(0xFFFFF0EE),
            surfaceContainer = Color(0xFFFCEAE7),
            surfaceContainerHigh = Color(0xFFF7E4E2),
            surfaceContainerHighest = Color(0xFFF1DEDC)
        )

    override val dark
        get() = darkColorScheme(
            primary = Color(0xFFFFB4AA),
            onPrimary = Color(0xFF561E18),
            primaryContainer = Color(0xFF73342C),
            onPrimaryContainer = Color(0xFFFFDAD5),
            secondary = Color(0xFFE7BDB7),
            onSecondary = Color(0xFF442926),
            secondaryContainer = Color(0xFF5D3F3B),
            onSecondaryContainer = Color(0xFFFFDAD5),
            tertiary = Color(0xFFDFC38C),
            onTertiary = Color(0xFF3F2E04),
            tertiaryContainer = Color(0xFF574419),
            onTertiaryContainer = Color(0xFFFCDFA6),
            error = Color(0xFFFFB4AB),
            onError = Color(0xFF690005),
            errorContainer = Color(0xFF93000A),
            onErrorContainer = Color(0xFFFFDAD6),
            background = Color(0xFF1A1110),
            onBackground = Color(0xFFF1DEDC),
            surface = Color(0xFF1A1110),
            onSurface = Color(0xFFF1DEDC),
            surfaceVariant = Color(0xFF534341),
            onSurfaceVariant = Color(0xFFD8C2BE),
            outline = Color(0xFFA08C8A),
            outlineVariant = Color(0xFF534341),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFFF1DEDC),
            inverseOnSurface = Color(0xFF392E2C),
            inversePrimary = Color(0xFF904A42),
            surfaceDim = Color(0xFF1A1110),
            surfaceBright = Color(0xFF423735),
            surfaceContainerLowest = Color(0xFF140C0B),
            surfaceContainerLow = Color(0xFF231918),
            surfaceContainer = Color(0xFF271D1C),
            surfaceContainerHigh = Color(0xFF322826),
            surfaceContainerHighest = Color(0xFF3D3231)
        )

    override val lightHighContrast
        get() = lightColorScheme(
            primary = Color(0xFF44100B),
            onPrimary = Color(0xFFFFFFFF),
            primaryContainer = Color(0xFF6E3029),
            onPrimaryContainer = Color(0xFFFFFFFF),
            secondary = Color(0xFF341C18),
            onSecondary = Color(0xFFFFFFFF),
            secondaryContainer = Color(0xFF593B37),
            onSecondaryContainer = Color(0xFFFFFFFF),
            tertiary = Color(0xFF2E2000),
            onTertiary = Color(0xFFFFFFFF),
            tertiaryContainer = Color(0xFF534015),
            onTertiaryContainer = Color(0xFFFFFFFF),
            error = Color(0xFF4E0002),
            onError = Color(0xFFFFFFFF),
            errorContainer = Color(0xFF8C0009),
            onErrorContainer = Color(0xFFFFFFFF),
            background = Color(0xFFFFF8F7),
            onBackground = Color(0xFF231918),
            surface = Color(0xFFFFF8F7),
            onSurface = Color(0xFF000000),
            surfaceVariant = Color(0xFFF5DDDA),
            onSurfaceVariant = Color(0xFF2E211F),
            outline = Color(0xFF4F3F3D),
            outlineVariant = Color(0xFF4F3F3D),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFF392E2C),
            inverseOnSurface = Color(0xFFFFFFFF),
            inversePrimary = Color(0xFFFFE7E3),
            surfaceDim = Color(0xFFE8D6D4),
            surfaceBright = Color(0xFFFFF8F7),
            surfaceContainerLowest = Color(0xFFFFFFFF),
            surfaceContainerLow = Color(0xFFFFF0EE),
            surfaceContainer = Color(0xFFFCEAE7),
            surfaceContainerHigh = Color(0xFFF7E4E2),
            surfaceContainerHighest = Color(0xFFF1DEDC)
        )

    override val darkHighContrast
        get() = darkColorScheme(
            primary = Color(0xFFFFF9F8),
            onPrimary = Color(0xFF000000),
            primaryContainer = Color(0xFFFFBAB1),
            onPrimaryContainer = Color(0xFF000000),
            secondary = Color(0xFFFFF9F8),
            onSecondary = Color(0xFF000000),
            secondaryContainer = Color(0xFFEBC1BB),
            onSecondaryContainer = Color(0xFF000000),
            tertiary = Color(0xFFFFFAF7),
            onTertiary = Color(0xFF000000),
            tertiaryContainer = Color(0xFFE4C790),
            onTertiaryContainer = Color(0xFF000000),
            error = Color(0xFFFFF9F9),
            onError = Color(0xFF000000),
            errorContainer = Color(0xFFFFBAB1),
            onErrorContainer = Color(0xFF000000),
            background = Color(0xFF1A1110),
            onBackground = Color(0xFFF1DEDC),
            surface = Color(0xFF1A1110),
            onSurface = Color(0xFFFFFFFF),
            surfaceVariant = Color(0xFF534341),
            onSurfaceVariant = Color(0xFFFFF9F8),
            outline = Color(0xFFDCC6C3),
            outlineVariant = Color(0xFFDCC6C3),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFFF1DEDC),
            inverseOnSurface = Color(0xFF000000),
            inversePrimary = Color(0xFF4E1812),
            surfaceDim = Color(0xFF1A1110),
            surfaceBright = Color(0xFF423735),
            surfaceContainerLowest = Color(0xFF140C0B),
            surfaceContainerLow = Color(0xFF231918),
            surfaceContainer = Color(0xFF271D1C),
            surfaceContainerHigh = Color(0xFF322826),
            surfaceContainerHighest = Color(0xFF3D3231)
        )

    override val lightMediumContrast
        get() = lightColorScheme(
            primary = Color(0xFF6E3029),
            onPrimary = Color(0xFFFFFFFF),
            primaryContainer = Color(0xFFAA6056),
            onPrimaryContainer = Color(0xFFFFFFFF),
            secondary = Color(0xFF593B37),
            onSecondary = Color(0xFFFFFFFF),
            secondaryContainer = Color(0xFF8F6C67),
            onSecondaryContainer = Color(0xFFFFFFFF),
            tertiary = Color(0xFF534015),
            onTertiary = Color(0xFFFFFFFF),
            tertiaryContainer = Color(0xFF887242),
            onTertiaryContainer = Color(0xFFFFFFFF),
            error = Color(0xFF8C0009),
            onError = Color(0xFFFFFFFF),
            errorContainer = Color(0xFFDA342E),
            onErrorContainer = Color(0xFFFFFFFF),
            background = Color(0xFFFFF8F7),
            onBackground = Color(0xFF231918),
            surface = Color(0xFFFFF8F7),
            onSurface = Color(0xFF231918),
            surfaceVariant = Color(0xFFF5DDDA),
            onSurfaceVariant = Color(0xFF4F3F3D),
            outline = Color(0xFF6C5B59),
            outlineVariant = Color(0xFF897674),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFF392E2C),
            inverseOnSurface = Color(0xFFFFEDEA),
            inversePrimary = Color(0xFFFFB4AA),
            surfaceDim = Color(0xFFE8D6D4),
            surfaceBright = Color(0xFFFFF8F7),
            surfaceContainerLowest = Color(0xFFFFFFFF),
            surfaceContainerLow = Color(0xFFFFF0EE),
            surfaceContainer = Color(0xFFFCEAE7),
            surfaceContainerHigh = Color(0xFFF7E4E2),
            surfaceContainerHighest = Color(0xFFF1DEDC)
        )

    override val darkMediumContrast
        get() = darkColorScheme(
            primary = Color(0xFFFFBAB1),
            onPrimary = Color(0xFF330403),
            primaryContainer = Color(0xFFCC7B71),
            onPrimaryContainer = Color(0xFF000000),
            secondary = Color(0xFFEBC1BB),
            onSecondary = Color(0xFF26100D),
            secondaryContainer = Color(0xFFAE8883),
            onSecondaryContainer = Color(0xFF000000),
            tertiary = Color(0xFFE4C790),
            onTertiary = Color(0xFF1F1500),
            tertiaryContainer = Color(0xFFA68E5B),
            onTertiaryContainer = Color(0xFF000000),
            error = Color(0xFFFFBAB1),
            onError = Color(0xFF370001),
            errorContainer = Color(0xFFFF5449),
            onErrorContainer = Color(0xFF000000),
            background = Color(0xFF1A1110),
            onBackground = Color(0xFFF1DEDC),
            surface = Color(0xFF1A1110),
            onSurface = Color(0xFFFFF9F8),
            surfaceVariant = Color(0xFF534341),
            onSurfaceVariant = Color(0xFFDCC6C3),
            outline = Color(0xFFB39E9B),
            outlineVariant = Color(0xFF927F7C),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFFF1DEDC),
            inverseOnSurface = Color(0xFF322826),
            inversePrimary = Color(0xFF74352D),
            surfaceDim = Color(0xFF1A1110),
            surfaceBright = Color(0xFF423735),
            surfaceContainerLowest = Color(0xFF140C0B),
            surfaceContainerLow = Color(0xFF231918),
            surfaceContainer = Color(0xFF271D1C),
            surfaceContainerHigh = Color(0xFF322826),
            surfaceContainerHighest = Color(0xFF3D3231)
        )
}