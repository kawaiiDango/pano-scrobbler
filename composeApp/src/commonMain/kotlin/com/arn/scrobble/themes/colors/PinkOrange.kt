package com.arn.scrobble.themes.colors

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

object PinkOrange : ThemeVariants {
    override val name = this::class.java.simpleName!!

    override val light
        get() = lightColorScheme(
            primary = Color(0xFF8D495A),
            onPrimary = Color(0xFFFFFFFF),
            primaryContainer = Color(0xFFFFD9DF),
            onPrimaryContainer = Color(0xFF3A0718),
            secondary = Color(0xFF75565C),
            onSecondary = Color(0xFFFFFFFF),
            secondaryContainer = Color(0xFFFFD9DF),
            onSecondaryContainer = Color(0xFF2B151A),
            tertiary = Color(0xFF7A5732),
            onTertiary = Color(0xFFFFFFFF),
            tertiaryContainer = Color(0xFFFFDCBD),
            onTertiaryContainer = Color(0xFF2C1600),
            error = Color(0xFFBA1A1A),
            onError = Color(0xFFFFFFFF),
            errorContainer = Color(0xFFFFDAD6),
            onErrorContainer = Color(0xFF410002),
            background = Color(0xFFFFF8F7),
            onBackground = Color(0xFF22191B),
            surface = Color(0xFFFFF8F7),
            onSurface = Color(0xFF22191B),
            surfaceVariant = Color(0xFFF3DDE0),
            onSurfaceVariant = Color(0xFF524345),
            outline = Color(0xFF847375),
            outlineVariant = Color(0xFFD6C2C4),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFF382E2F),
            inverseOnSurface = Color(0xFFFEEDEE),
            inversePrimary = Color(0xFFFFB1C1),
            surfaceDim = Color(0xFFE7D6D8),
            surfaceBright = Color(0xFFFFF8F7),
            surfaceContainerLowest = Color(0xFFFFFFFF),
            surfaceContainerLow = Color(0xFFFFF0F1),
            surfaceContainer = Color(0xFFFBEAEB),
            surfaceContainerHigh = Color(0xFFF5E4E6),
            surfaceContainerHighest = Color(0xFFEFDEE0)
        )

    override val dark
        get() = darkColorScheme(
            primary = Color(0xFFFFB1C1),
            onPrimary = Color(0xFF551D2C),
            primaryContainer = Color(0xFF713342),
            onPrimaryContainer = Color(0xFFFFD9DF),
            secondary = Color(0xFFE4BDC3),
            onSecondary = Color(0xFF43292F),
            secondaryContainer = Color(0xFF5B3F45),
            onSecondaryContainer = Color(0xFFFFD9DF),
            tertiary = Color(0xFFECBE91),
            onTertiary = Color(0xFF462A09),
            tertiaryContainer = Color(0xFF60401D),
            onTertiaryContainer = Color(0xFFFFDCBD),
            error = Color(0xFFFFB4AB),
            onError = Color(0xFF690005),
            errorContainer = Color(0xFF93000A),
            onErrorContainer = Color(0xFFFFDAD6),
            background = Color(0xFF191113),
            onBackground = Color(0xFFEFDEE0),
            surface = Color(0xFF191113),
            onSurface = Color(0xFFEFDEE0),
            surfaceVariant = Color(0xFF524345),
            onSurfaceVariant = Color(0xFFD6C2C4),
            outline = Color(0xFF9F8C8F),
            outlineVariant = Color(0xFF524345),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFFEFDEE0),
            inverseOnSurface = Color(0xFF382E2F),
            inversePrimary = Color(0xFF8D495A),
            surfaceDim = Color(0xFF191113),
            surfaceBright = Color(0xFF413738),
            surfaceContainerLowest = Color(0xFF140C0E),
            surfaceContainerLow = Color(0xFF22191B),
            surfaceContainer = Color(0xFF261D1F),
            surfaceContainerHigh = Color(0xFF312829),
            surfaceContainerHighest = Color(0xFF3C3234)
        )

    override val lightHighContrast
        get() = lightColorScheme(
            primary = Color(0xFF430E1F),
            onPrimary = Color(0xFFFFFFFF),
            primaryContainer = Color(0xFF6C2F3F),
            onPrimaryContainer = Color(0xFFFFFFFF),
            secondary = Color(0xFF331B21),
            onSecondary = Color(0xFFFFFFFF),
            secondaryContainer = Color(0xFF573B41),
            onSecondaryContainer = Color(0xFFFFFFFF),
            tertiary = Color(0xFF351C00),
            onTertiary = Color(0xFFFFFFFF),
            tertiaryContainer = Color(0xFF5B3C1A),
            onTertiaryContainer = Color(0xFFFFFFFF),
            error = Color(0xFF4E0002),
            onError = Color(0xFFFFFFFF),
            errorContainer = Color(0xFF8C0009),
            onErrorContainer = Color(0xFFFFFFFF),
            background = Color(0xFFFFF8F7),
            onBackground = Color(0xFF22191B),
            surface = Color(0xFFFFF8F7),
            onSurface = Color(0xFF000000),
            surfaceVariant = Color(0xFFF3DDE0),
            onSurfaceVariant = Color(0xFF2D2123),
            outline = Color(0xFF4D3F42),
            outlineVariant = Color(0xFF4D3F42),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFF382E2F),
            inverseOnSurface = Color(0xFFFFFFFF),
            inversePrimary = Color(0xFFFFE6E9),
            surfaceDim = Color(0xFFE7D6D8),
            surfaceBright = Color(0xFFFFF8F7),
            surfaceContainerLowest = Color(0xFFFFFFFF),
            surfaceContainerLow = Color(0xFFFFF0F1),
            surfaceContainer = Color(0xFFFBEAEB),
            surfaceContainerHigh = Color(0xFFF5E4E6),
            surfaceContainerHighest = Color(0xFFEFDEE0)
        )

    override val darkHighContrast
        get() = darkColorScheme(
            primary = Color(0xFFFFF9F9),
            onPrimary = Color(0xFF000000),
            primaryContainer = Color(0xFFFFB8C5),
            onPrimaryContainer = Color(0xFF000000),
            secondary = Color(0xFFFFF9F9),
            onSecondary = Color(0xFF000000),
            secondaryContainer = Color(0xFFE8C1C7),
            onSecondaryContainer = Color(0xFF000000),
            tertiary = Color(0xFFFFFAF8),
            onTertiary = Color(0xFF000000),
            tertiaryContainer = Color(0xFFF1C295),
            onTertiaryContainer = Color(0xFF000000),
            error = Color(0xFFFFF9F9),
            onError = Color(0xFF000000),
            errorContainer = Color(0xFFFFBAB1),
            onErrorContainer = Color(0xFF000000),
            background = Color(0xFF191113),
            onBackground = Color(0xFFEFDEE0),
            surface = Color(0xFF191113),
            onSurface = Color(0xFFFFFFFF),
            surfaceVariant = Color(0xFF524345),
            onSurfaceVariant = Color(0xFFFFF9F9),
            outline = Color(0xFFDAC6C8),
            outlineVariant = Color(0xFFDAC6C8),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFFEFDEE0),
            inverseOnSurface = Color(0xFF000000),
            inversePrimary = Color(0xFF4D1626),
            surfaceDim = Color(0xFF191113),
            surfaceBright = Color(0xFF413738),
            surfaceContainerLowest = Color(0xFF140C0E),
            surfaceContainerLow = Color(0xFF22191B),
            surfaceContainer = Color(0xFF261D1F),
            surfaceContainerHigh = Color(0xFF312829),
            surfaceContainerHighest = Color(0xFF3C3234)
        )

    override val lightMediumContrast
        get() = lightColorScheme(
            primary = Color(0xFF6C2F3F),
            onPrimary = Color(0xFFFFFFFF),
            primaryContainer = Color(0xFFA75F6F),
            onPrimaryContainer = Color(0xFFFFFFFF),
            secondary = Color(0xFF573B41),
            onSecondary = Color(0xFFFFFFFF),
            secondaryContainer = Color(0xFF8D6C72),
            onSecondaryContainer = Color(0xFFFFFFFF),
            tertiary = Color(0xFF5B3C1A),
            onTertiary = Color(0xFFFFFFFF),
            tertiaryContainer = Color(0xFF936D46),
            onTertiaryContainer = Color(0xFFFFFFFF),
            error = Color(0xFF8C0009),
            onError = Color(0xFFFFFFFF),
            errorContainer = Color(0xFFDA342E),
            onErrorContainer = Color(0xFFFFFFFF),
            background = Color(0xFFFFF8F7),
            onBackground = Color(0xFF22191B),
            surface = Color(0xFFFFF8F7),
            onSurface = Color(0xFF22191B),
            surfaceVariant = Color(0xFFF3DDE0),
            onSurfaceVariant = Color(0xFF4D3F42),
            outline = Color(0xFF6B5B5E),
            outlineVariant = Color(0xFF887679),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFF382E2F),
            inverseOnSurface = Color(0xFFFEEDEE),
            inversePrimary = Color(0xFFFFB1C1),
            surfaceDim = Color(0xFFE7D6D8),
            surfaceBright = Color(0xFFFFF8F7),
            surfaceContainerLowest = Color(0xFFFFFFFF),
            surfaceContainerLow = Color(0xFFFFF0F1),
            surfaceContainer = Color(0xFFFBEAEB),
            surfaceContainerHigh = Color(0xFFF5E4E6),
            surfaceContainerHighest = Color(0xFFEFDEE0)
        )

    override val darkMediumContrast
        get() = darkColorScheme(
            primary = Color(0xFFFFB8C5),
            onPrimary = Color(0xFF330313),
            primaryContainer = Color(0xFFC87A8B),
            onPrimaryContainer = Color(0xFF000000),
            secondary = Color(0xFFE8C1C7),
            onSecondary = Color(0xFF251015),
            secondaryContainer = Color(0xFFAB888E),
            onSecondaryContainer = Color(0xFF000000),
            tertiary = Color(0xFFF1C295),
            onTertiary = Color(0xFF251200),
            tertiaryContainer = Color(0xFFB28960),
            onTertiaryContainer = Color(0xFF000000),
            error = Color(0xFFFFBAB1),
            onError = Color(0xFF370001),
            errorContainer = Color(0xFFFF5449),
            onErrorContainer = Color(0xFF000000),
            background = Color(0xFF191113),
            onBackground = Color(0xFFEFDEE0),
            surface = Color(0xFF191113),
            onSurface = Color(0xFFFFF9F9),
            surfaceVariant = Color(0xFF524345),
            onSurfaceVariant = Color(0xFFDAC6C8),
            outline = Color(0xFFB19EA1),
            outlineVariant = Color(0xFF907F81),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFFEFDEE0),
            inverseOnSurface = Color(0xFF312829),
            inversePrimary = Color(0xFF723444),
            surfaceDim = Color(0xFF191113),
            surfaceBright = Color(0xFF413738),
            surfaceContainerLowest = Color(0xFF140C0E),
            surfaceContainerLow = Color(0xFF22191B),
            surfaceContainer = Color(0xFF261D1F),
            surfaceContainerHigh = Color(0xFF312829),
            surfaceContainerHighest = Color(0xFF3C3234)
        )
}