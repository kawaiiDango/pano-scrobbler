package com.arn.scrobble.themes.colors

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

object Themeff9803 : ThemeVariants {
    override val name = this::class.simpleName!!

    override val light
        get() = lightColorScheme(
            primary = Color(0xFF865318),
            onPrimary = Color(0xFFFFFFFF),
            primaryContainer = Color(0xFFFFDCBE),
            onPrimaryContainer = Color(0xFF2C1600),
            secondary = Color(0xFF735A42),
            onSecondary = Color(0xFFFFFFFF),
            secondaryContainer = Color(0xFFFFDCBE),
            onSecondaryContainer = Color(0xFF291806),
            tertiary = Color(0xFF58633A),
            onTertiary = Color(0xFFFFFFFF),
            tertiaryContainer = Color(0xFFDCE8B4),
            onTertiaryContainer = Color(0xFF161E00),
            error = Color(0xFFBA1A1A),
            onError = Color(0xFFFFFFFF),
            errorContainer = Color(0xFFFFDAD6),
            onErrorContainer = Color(0xFF410002),
            background = Color(0xFFFFF8F5),
            onBackground = Color(0xFF211A14),
            surface = Color(0xFFFFF8F5),
            onSurface = Color(0xFF211A14),
            surfaceVariant = Color(0xFFF2DFD1),
            onSurfaceVariant = Color(0xFF51453A),
            outline = Color(0xFF837468),
            outlineVariant = Color(0xFFD5C3B5),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFF372F28),
            inverseOnSurface = Color(0xFFFDEEE3),
            inversePrimary = Color(0xFFFDB975),
            surfaceDim = Color(0xFFE6D7CD),
            surfaceBright = Color(0xFFFFF8F5),
            surfaceContainerLowest = Color(0xFFFFFFFF),
            surfaceContainerLow = Color(0xFFFFF1E7),
            surfaceContainer = Color(0xFFFAEBE0),
            surfaceContainerHigh = Color(0xFFF4E5DB),
            surfaceContainerHighest = Color(0xFFEFE0D5)
        )

    override val dark
        get() = darkColorScheme(
            primary = Color(0xFFFDB975),
            onPrimary = Color(0xFF4A2800),
            primaryContainer = Color(0xFF693C00),
            onPrimaryContainer = Color(0xFFFFDCBE),
            secondary = Color(0xFFE1C1A4),
            onSecondary = Color(0xFF402C18),
            secondaryContainer = Color(0xFF59422C),
            onSecondaryContainer = Color(0xFFFFDCBE),
            tertiary = Color(0xFFC0CC9A),
            onTertiary = Color(0xFF2B3410),
            tertiaryContainer = Color(0xFF414B24),
            onTertiaryContainer = Color(0xFFDCE8B4),
            error = Color(0xFFFFB4AB),
            onError = Color(0xFF690005),
            errorContainer = Color(0xFF93000A),
            onErrorContainer = Color(0xFFFFDAD6),
            background = Color(0xFF19120C),
            onBackground = Color(0xFFEFE0D5),
            surface = Color(0xFF19120C),
            onSurface = Color(0xFFEFE0D5),
            surfaceVariant = Color(0xFF51453A),
            onSurfaceVariant = Color(0xFFD5C3B5),
            outline = Color(0xFF9D8E81),
            outlineVariant = Color(0xFF51453A),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFFEFE0D5),
            inverseOnSurface = Color(0xFF372F28),
            inversePrimary = Color(0xFF865318),
            surfaceDim = Color(0xFF19120C),
            surfaceBright = Color(0xFF403830),
            surfaceContainerLowest = Color(0xFF130D07),
            surfaceContainerLow = Color(0xFF211A14),
            surfaceContainer = Color(0xFF261E18),
            surfaceContainerHigh = Color(0xFF302822),
            surfaceContainerHighest = Color(0xFF3C332C)
        )

    override val lightHighContrast
        get() = lightColorScheme(
            primary = Color(0xFF361C00),
            onPrimary = Color(0xFFFFFFFF),
            primaryContainer = Color(0xFF643800),
            onPrimaryContainer = Color(0xFFFFFFFF),
            secondary = Color(0xFF311E0B),
            onSecondary = Color(0xFFFFFFFF),
            secondaryContainer = Color(0xFF553E29),
            onSecondaryContainer = Color(0xFFFFFFFF),
            tertiary = Color(0xFF1D2504),
            onTertiary = Color(0xFFFFFFFF),
            tertiaryContainer = Color(0xFF3D4721),
            onTertiaryContainer = Color(0xFFFFFFFF),
            error = Color(0xFF4E0002),
            onError = Color(0xFFFFFFFF),
            errorContainer = Color(0xFF8C0009),
            onErrorContainer = Color(0xFFFFFFFF),
            background = Color(0xFFFFF8F5),
            onBackground = Color(0xFF211A14),
            surface = Color(0xFFFFF8F5),
            onSurface = Color(0xFF000000),
            surfaceVariant = Color(0xFFF2DFD1),
            onSurfaceVariant = Color(0xFF2C2219),
            outline = Color(0xFF4C4136),
            outlineVariant = Color(0xFF4C4136),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFF372F28),
            inverseOnSurface = Color(0xFFFFFFFF),
            inversePrimary = Color(0xFFFFE8D5),
            surfaceDim = Color(0xFFE6D7CD),
            surfaceBright = Color(0xFFFFF8F5),
            surfaceContainerLowest = Color(0xFFFFFFFF),
            surfaceContainerLow = Color(0xFFFFF1E7),
            surfaceContainer = Color(0xFFFAEBE0),
            surfaceContainerHigh = Color(0xFFF4E5DB),
            surfaceContainerHighest = Color(0xFFEFE0D5)
        )

    override val darkHighContrast
        get() = darkColorScheme(
            primary = Color(0xFFFFFAF8),
            onPrimary = Color(0xFF000000),
            primaryContainer = Color(0xFFFFBE7D),
            onPrimaryContainer = Color(0xFF000000),
            secondary = Color(0xFFFFFAF8),
            onSecondary = Color(0xFF000000),
            secondaryContainer = Color(0xFFE6C5A8),
            onSecondaryContainer = Color(0xFF000000),
            tertiary = Color(0xFFF7FFD6),
            onTertiary = Color(0xFF000000),
            tertiaryContainer = Color(0xFFC4D09E),
            onTertiaryContainer = Color(0xFF000000),
            error = Color(0xFFFFF9F9),
            onError = Color(0xFF000000),
            errorContainer = Color(0xFFFFBAB1),
            onErrorContainer = Color(0xFF000000),
            background = Color(0xFF19120C),
            onBackground = Color(0xFFEFE0D5),
            surface = Color(0xFF19120C),
            onSurface = Color(0xFFFFFFFF),
            surfaceVariant = Color(0xFF51453A),
            onSurfaceVariant = Color(0xFFFFFAF8),
            outline = Color(0xFFD9C8BA),
            outlineVariant = Color(0xFFD9C8BA),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFFEFE0D5),
            inverseOnSurface = Color(0xFF000000),
            inversePrimary = Color(0xFF412300),
            surfaceDim = Color(0xFF19120C),
            surfaceBright = Color(0xFF403830),
            surfaceContainerLowest = Color(0xFF130D07),
            surfaceContainerLow = Color(0xFF211A14),
            surfaceContainer = Color(0xFF261E18),
            surfaceContainerHigh = Color(0xFF302822),
            surfaceContainerHighest = Color(0xFF3C332C)
        )

    override val lightMediumContrast
        get() = lightColorScheme(
            primary = Color(0xFF643800),
            onPrimary = Color(0xFFFFFFFF),
            primaryContainer = Color(0xFF9F682D),
            onPrimaryContainer = Color(0xFFFFFFFF),
            secondary = Color(0xFF553E29),
            onSecondary = Color(0xFFFFFFFF),
            secondaryContainer = Color(0xFF8A7057),
            onSecondaryContainer = Color(0xFFFFFFFF),
            tertiary = Color(0xFF3D4721),
            onTertiary = Color(0xFFFFFFFF),
            tertiaryContainer = Color(0xFF6E794E),
            onTertiaryContainer = Color(0xFFFFFFFF),
            error = Color(0xFF8C0009),
            onError = Color(0xFFFFFFFF),
            errorContainer = Color(0xFFDA342E),
            onErrorContainer = Color(0xFFFFFFFF),
            background = Color(0xFFFFF8F5),
            onBackground = Color(0xFF211A14),
            surface = Color(0xFFFFF8F5),
            onSurface = Color(0xFF211A14),
            surfaceVariant = Color(0xFFF2DFD1),
            onSurfaceVariant = Color(0xFF4C4136),
            outline = Color(0xFF6A5D51),
            outlineVariant = Color(0xFF87786C),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFF372F28),
            inverseOnSurface = Color(0xFFFDEEE3),
            inversePrimary = Color(0xFFFDB975),
            surfaceDim = Color(0xFFE6D7CD),
            surfaceBright = Color(0xFFFFF8F5),
            surfaceContainerLowest = Color(0xFFFFFFFF),
            surfaceContainerLow = Color(0xFFFFF1E7),
            surfaceContainer = Color(0xFFFAEBE0),
            surfaceContainerHigh = Color(0xFFF4E5DB),
            surfaceContainerHighest = Color(0xFFEFE0D5)
        )

    override val darkMediumContrast
        get() = darkColorScheme(
            primary = Color(0xFFFFBE7D),
            onPrimary = Color(0xFF251200),
            primaryContainer = Color(0xFFC08446),
            onPrimaryContainer = Color(0xFF000000),
            secondary = Color(0xFFE6C5A8),
            onSecondary = Color(0xFF231303),
            secondaryContainer = Color(0xFFA88B71),
            onSecondaryContainer = Color(0xFF000000),
            tertiary = Color(0xFFC4D09E),
            onTertiary = Color(0xFF111900),
            tertiaryContainer = Color(0xFF8A9668),
            onTertiaryContainer = Color(0xFF000000),
            error = Color(0xFFFFBAB1),
            onError = Color(0xFF370001),
            errorContainer = Color(0xFFFF5449),
            onErrorContainer = Color(0xFF000000),
            background = Color(0xFF19120C),
            onBackground = Color(0xFFEFE0D5),
            surface = Color(0xFF19120C),
            onSurface = Color(0xFFFFFAF8),
            surfaceVariant = Color(0xFF51453A),
            onSurfaceVariant = Color(0xFFD9C8BA),
            outline = Color(0xFFB0A093),
            outlineVariant = Color(0xFF8F8074),
            scrim = Color(0xFF000000),
            inverseSurface = Color(0xFFEFE0D5),
            inverseOnSurface = Color(0xFF302922),
            inversePrimary = Color(0xFF6B3D01),
            surfaceDim = Color(0xFF19120C),
            surfaceBright = Color(0xFF403830),
            surfaceContainerLowest = Color(0xFF130D07),
            surfaceContainerLow = Color(0xFF211A14),
            surfaceContainer = Color(0xFF261E18),
            surfaceContainerHigh = Color(0xFF302822),
            surfaceContainerHighest = Color(0xFF3C332C)
        )
}